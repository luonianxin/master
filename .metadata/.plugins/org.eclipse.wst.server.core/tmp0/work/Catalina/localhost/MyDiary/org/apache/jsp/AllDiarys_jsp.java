/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2019-01-09 16:01:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.org.apache.xml.internal.serializer.ToUnknownStream;
import java.util.ArrayList;
import java.sql.Statement;
import com.fzzdh.diary.*;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.*;
import java.sql.Timestamp;
import java.sql.Connection;
import java.sql.PreparedStatement;

public final class AllDiarys_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/SessionCheck.jsp", Long.valueOf(1546328805375L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.fzzdh.diary");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.PreparedStatement");
    _jspx_imports_classes.add("com.sun.org.apache.xml.internal.serializer.ToUnknownStream");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/bootstrap-3.3.7/css/bootstrap.css\" >\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/bootstrap-3.3.7/css/bootstrap.min.css\" >\r\n");
      out.write("<link rel=\"stylesheet\"  href=\"");
      out.print(request.getContextPath() );
      out.write("/bootstrap-3.3.7/css/datetimepicker.css\"/>\r\n");
      out.write("<script src=\"./bootstrap-3.3.7/js/jquery-2.1.0.js\"> </script>\r\n");
      out.write("<script src=\"./bootstrap-3.3.7/js/bootstrap.js\"> </script>\r\n");
      out.write("<script src=\"./bootstrap-3.3.7/js/bootstrap.min.js\"> </script>\r\n");
      out.write("<script src=\"./bootstrap-3.3.7/js/bootstrap-datetimepicker.js\"  type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"./bootstrap-3.3.7/js/bootstrap-datetimepicker.zh-CN.js\"  type=\"text/javascript\"></script>\r\n");
      out.write("<title>所有日记</title>\r\n");

 	String path=request.getContextPath();
	String basePath= request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";
   
      out.write("\r\n");
      out.write("\r\n");
 
	
	String userlogined = (String)session.getAttribute("userlogined");
	if(userlogined==null ||!userlogined.trim().equals("true")){
		response.sendRedirect( basePath+"/logInOut/Login.jsp");
		return ;
	}

      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("body {\r\n");
      out.write("\toverflow: scroll;\r\n");
      out.write("\toverflow-x: hidden;\r\n");
      out.write("}\r\n");
      out.write("input{\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("input.text{line-height: 35px;vertical-align: middle;font-style: italic;text-align: center;}\r\n");
      out.write("\r\n");
      out.write("input:-ms-input-placeholder{\r\n");
      out.write("    color: GRAY;opacity:1;\r\n");
      out.write("}\r\n");
      out.write("button{\r\n");
      out.write("\twidth:120px;\r\n");
      out.write("\theight:45px;\r\n");
      out.write("\tline-height: 35px;\r\n");
      out.write("\tfont-size: 20px; \r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tbackground-color:orange;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tmargin-left: 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"margin-right:35px\">\r\n");
 
	request.setCharacterEncoding("UTF-8");
	response.setCharacterEncoding("utf-8");
	final int PAGE_SIZE = 10;
	int pageNo = 1;
	int userid = -1;
	userid = Integer.parseInt(session.getAttribute("userid").toString());
	String strPageNo = request.getParameter("pageNo");
	if(strPageNo!=null)
	{try{
		pageNo = Integer.parseInt(strPageNo);
	}catch(NumberFormatException e){
		e.printStackTrace();
		pageNo=1;
	}
	}
	if(pageNo<=0 ) pageNo = 1;
	//定义总的页面数，初始化为0,要从数据库查询出来设置
	int totalPages =0;
	int totalRecords =0;
	
	Connection conn = DatabaseUtil.getConnection();
	Statement stmt = DatabaseUtil.getStatement(conn);
	ResultSet rs = DatabaseUtil.excuteQuery(stmt, "select count(*) from diaryDetail where userid ="+userid);
	if(rs!=null){
	rs.next();
	totalRecords = rs.getInt(1);
	}
	//根据记录数算出总的页面数
	totalPages = (totalRecords+PAGE_SIZE-1)/PAGE_SIZE;
	//检查pageNO是否超出总数
	if(pageNo>totalPages)pageNo = totalPages;
	//定义一个全局的集合用来存放所有的查询结果
	ArrayList<Diary> diarys = new ArrayList<Diary>();
	int startPos = (pageNo-1) * PAGE_SIZE; 
	diarys = DatabaseUtil.ExcuteQueryAll(userid, startPos, PAGE_SIZE);
	

	
	

      out.write("\r\n");
      out.write("<div style=\"margin-left: 35px\">\r\n");
      out.write("\t<div id=\"seeAll\" style=\"margin-top: 15px\">\r\n");
      out.write("\t\t<span><strong><font size=\"4px\">我的日记本</font></strong></span><br>\r\n");
      out.write("\t\t<span><font style=\"font-style: italic;size:3px;color: gray \"  >搜索、浏览、删除 我的日记</font></span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div id=\"search-block\" style=\"margin-top: 15px;float:none \">\r\n");
      out.write("\t\t<form name=\"searchform\" action= \"AllDiarys.jsp\">\r\n");
      out.write("\t\t <input id=\"startTime\" name=\"startTime\" class=\"text\" style=\"width: 240px; height: 45px;\" placeholder=\"开始日期\"/>\r\n");
      out.write("\t\t <input id=\"endTime\" name=\"endTime\" class=\"text\" style=\"width: 240px; height: 45px; margin-left:35px;\"placeholder=\"结束日期\"/>\r\n");
      out.write("\t\t<div id=\"btn-group\" style=\"margin-left: 545px;margin-top: -43px\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t\t<button class=\"button\" type=\"submit\" >查询</button>\r\n");
      out.write("\t\t</div>\t \r\n");
      out.write("\t\t</form>\t\r\n");
      out.write("\t\t\t\t<div id=\"btn-group\" style=\"margin-left: 675px;margin-top: -45px\">\r\n");
      out.write("\t\t\t\t<span>\r\n");
      out.write("\t\t\t\t\t<a href=\"AllDiarys.jsp\"><button class=\"button\" >所有日记</button></a>\r\n");
      out.write("\t\t\t\t\t<a href=\"WriteDiary.jsp\"><button class=\"button\" >写日记</button></a>\t\r\n");
      out.write("\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"tableWrap table-responsive\" style=\"margin-top:30px \">\r\n");
      out.write("           <table class=\"table\">\r\n");
      out.write("                   <thead>\r\n");
      out.write("                      <tr>\r\n");
      out.write("                         <th width=\"60%\"style=\"font-size:22px;text-align: left;padding-left: 35px \">日记标题</th>\r\n");
      out.write("                         <th width=\"20%\" style=\"font-size:22px;text-align: center;\">编写时间</th>\r\n");
      out.write("                         <th width=\"20%\" style=\"font-size:22px;text-align: center;\" >操作</th>\r\n");
      out.write("                       </tr>\r\n");
      out.write("                    </thead>\r\n");
      out.write("              \t\t<tbody>\r\n");
      out.write("              \t\t");

						String startTime = request.getParameter("startTime");
						String endTime = request.getParameter("endTime");
						
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<script>\r\n");
      out.write("\t\t\t\t\t\t");

						if(startTime!=null){
						
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\tsearchform.startTime.value =\"");
      out.print(startTime );
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t");
}
						if(endTime!=null){
						
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t\tsearchform.endTime.value =\"");
      out.print(endTime);
      out.write("\";\r\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</script>\r\n");
      out.write("\t\t\t\t\t");
 
						java.sql.Date starttime = null;
						java.sql.Date endtime = null;
						SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
						if(startTime!=null&&startTime!=""){
							try{
								 starttime = new java.sql.Date(sdf.parse(startTime).getTime());
							}catch(ParseException pe){
								pe.printStackTrace();	
							}
						}
						if(endTime!=null&&endTime!=""){
							try{
								 endtime = new java.sql.Date(sdf.parse(endTime).getTime());
							}catch(ParseException pe){
								pe.printStackTrace();	
							}
						}
						
					
						if(starttime == null && userid !=-1)
						{
							if(endtime == null){
								//默认查询所有的内容
								for(Diary d:diarys){
									out.println("<tr><td width='60%' >");
									out.println("<a style='text-decoration: none;' href='./diary/ShowContent.jsp?diaryid="+d.getDiaryid()+"'>"+d.getDiarytitle()+"</a>");
									out.println("</td><td width='20%' style='text-align: center;' >");
									out.println(d.getDiarywritetime());
									out.println("</td><td width='20%'style='text-align: center;'>");
									out.println("<span><a style='text-decoration: none;' href='EditDiary.jsp?diaryid="+d.getDiaryid()+"'>编辑</a><a style='text-decoration: none;margin-left: 10px'href='deleteOK.jsp?diaryid="+d.getDiaryid()+"'>删除</a></span>");
									out.println("</td></tr>");
								}
							}else{
								
								for(Diary d:diarys){
									if(d.getDiarywritetime().getTime()<=endtime.getTime()){
										out.println("<tr><td width='60%' >");
										out.println(d.getDiarytitle());
										out.println("</td><td width='20%' style='text-align: center;' >");
										out.println(d.getDiarywritetime());
										out.println("</td><td width='20%'style='text-align: center;'>");
										out.println("<span><a style='text-decoration: none' href='#'>编辑</a><a style='text-decoration: none;margin-left: 10px'href='deleteOK.jsp?diaryid="+d.getDiaryid()+"'>删除</a></span>");
										out.println("</td></tr>");
									}
								}
							}
						}else{
							//搜索时间大于startTime的日记
							if(endtime ==null && userid !=-1){
						
							for(Diary d:diarys){
								if(d.getDiarywritetime().getTime() >= starttime.getTime()){
									out.println("<tr><td width='60%' >");
									//out.println(d.getDiarytitle());
									out.println("<a style='text-decoration: none;' href='./diary/ShowContent.jsp?diaryid="+d.getDiaryid()+"'>"+d.getDiarytitle()+"</a>");
									out.println("</td><td width='20%' style='text-align: center;' >");
									out.println(d.getDiarywritetime());
									out.println("</td><td width='20%'style='text-align: center;'>");
									out.println("<span><a style='text-decoration: none' href='#'>编辑</a><a style='text-decoration: none;margin-left: 10px'href='deleteOK.jsp?diaryid="+d.getDiaryid()+"'>删除</a></span>");
									out.println("</td></tr>");
								}
							}
							}else{
								ArrayList<Diary> list = DatabaseUtil.ExcuteQueryAll(userid);
								for(Diary d:diarys){
									if(d.getDiarywritetime().getTime() >= starttime.getTime()&&d.getDiarywritetime().getTime() <= endtime.getTime()){
										out.println("<tr><td width='60%' >");
										//out.println(d.getDiarytitle());
										out.println("<a style='text-decoration: none;' href='./diary/ShowContent.jsp?diaryid="+d.getDiaryid()+"'>"+d.getDiarytitle()+"</a>");
										out.println("</td><td width='20%' style='text-align: center;' >");
										out.println(d.getDiarywritetime());
										out.println("</td><td width='20%'style='text-align: center;'>");
										out.println("<span><a style='text-decoration: none' href='#'>编辑</a><a style='text-decoration: none;margin-left: 10px'href='deleteOK.jsp?diaryid="+d.getDiaryid()+"'>删除</a></span>");
										out.println("</td></tr>");
									}
								}
	
							}
						}
	
					
      out.write("\r\n");
      out.write("              \t\t</tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("            <!-- 底部分页栏 -->\r\n");
      out.write("       <table border=\"0\" cellpadding=\"3\" cellspacing=\"0\" width=\"30%\" style=\"margin-top: 40px;margin-left: 70%\">\r\n");
      out.write("    <tbody>\r\n");
      out.write("      <tr valign=\"top\">\r\n");
      out.write("        <td><span >\r\n");
      out.write("          第");
      out.print(pageNo );
      out.write('页');
      out.write(',');
      out.write('共');
      out.print(totalPages );
      out.write("页 </span>\r\n");
      out.write("          \r\n");
      out.write("          <span ><span >\r\n");
      out.write("          <a href=\"AllDiarys.jsp?pageNo=1\">第一页</a></span>\r\n");
      out.write("          \t<a href=\"AllDiarys.jsp?pageNo=");
      out.print(pageNo-1);
      out.write("\">上一页</a>\r\n");
      out.write("          </span>\r\n");
      out.write("          \r\n");
      out.write("         <span>|</span>\r\n");
      out.write("          \r\n");
      out.write("          </span>\r\n");
      out.write("          ");

			for(int i=1;i<=totalPages;i++){
		  
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"AllDiarys.jsp?pageNo=");
      out.print(i);
      out.write("\" style=\"text-decoration: none\">");
      out.print(i );
      out.write("</a>&nbsp;\r\n");
      out.write("\t\t  ");

			}
          
      out.write("</span>\r\n");
      out.write("         <span >| <a href=\"AllDiarys.jsp?pageNo=");
      out.print(pageNo+1);
      out.write("\">下一页</a>\r\n");
      out.write("          |&nbsp; \r\n");
      out.write("          <a href=\"AllDiarys.jsp?pageNo=");
      out.print(totalPages);
      out.write("\">最末页</a>  </span>  </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write("     </div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\t///$.noConflict();//有时候引用别人框架时，发生函数未定义无法识别之类的错误解决，最简单有效的办法是这个。出现这种错误最有可能的原因是\r\n");
      out.write("\t//js文件重复，相互冲突了。有时候还会报$不是一个函数的情况，这是因为你前面加了noConflict函数后，把原来要引用的文件给过滤掉了，导致无法\r\n");
      out.write("\t//识别\r\n");
      out.write("\t$('#startTime').datetimepicker({\r\n");
      out.write("\tformat: \"yyyy-mm-dd \",\r\n");
      out.write("\tautoclose: true,\r\n");
      out.write("\ttodayBtn: true,\r\n");
      out.write("\tlanguage:'zh-CN',\r\n");
      out.write("\tpickerPosition:'bottom',\r\n");
      out.write("\tminView:'4',\r\n");
      out.write("\t});\r\n");
      out.write("\t$('#endTime').datetimepicker({\r\n");
      out.write("\tformat: \"yyyy-mm-dd \",\r\n");
      out.write("\tautoclose: true,\r\n");
      out.write("\ttodayBtn: true,\r\n");
      out.write("\tlanguage:'zh-CN',\r\n");
      out.write("\tpickerPosition:'bottom',\r\n");
      out.write("\tminView:'4',\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
